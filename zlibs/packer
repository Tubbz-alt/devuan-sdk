#!/usr/bin/env zsh

# Devuan SDK - build management

# Copyright (C) 2015 Dyne.org Foundation
#
# Devuan SDK is designed, written and maintained by Denis Roio <jaromil@dyne.org>
#
# This source code is free software; you can redistribute it and/or
# modify it under the terms of the GNU Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This source code is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  Please refer
# to the GNU Public License for more details.
#
# You should have received a copy of the GNU Public License along with
# this source code; if not, write to: Free Software Foundation, Inc.,
# 675 Mass Ave, Cambridge, MA 02139, USA.


auto-packer() {

}

packer-build() {
    fn packer-build
    target=$1
    # default suite
    suite=${2:-unstable}
    req=(target)
    freq=($R/packer)
    # TODO in zuper: xreq to check for binaries
    ckreq || return $?

    iso_path=$R/iso/devuan-$release-$chroot_arch-netinst-auto.iso

    [[ -r $iso_path ]] || {
        error "ISO missing: netinst-auto"
        act "To build vm images with packer you need to first build a netinst-auto iso"
        act "use the commands: 'iso netinst-auto' and then 'auto-iso'"
        return 1
    }

    iso_md5=`md5sum $iso_path | awk '{print $1}'`

    notice "Packing iso: $iso_path"
    act "md5: $iso_md5"
    act "suite: $suite"

    packer_headless=true
    # this works only on virtualbox-iso
    keep_failed_build=false
    [[ $DEBUG = 1 ]] && {
        packer_headless=false
        keep_failed_build=true
        export PACKER_LOG=1
    }

    vm_output=devuan-$release-$chroot_arch-$iso_type

    ztmp

    case $target in
        qemu*)
            cat <<EOF >> $ztmpfile
{
    "builders":
    [
        {
            "type": "qemu",
            "iso_url": "file://$iso_path",
            "iso_checksum": "$iso_md5",
            "iso_checksum_type": "md5",
            "output_directory": "$R/packer/$target",
            "ssh_wait_timeout": "30s",
            "shutdown_command": "init 0",
            "disk_size": 8192,
            "format": "qcow2",
            "headless": $packer_headless,
            "accelerator": "kvm",

            "ssh_username": "root",
            "ssh_password": "devuan",
            "ssh_port": 22,
            "ssh_wait_timeout": "90m",
            "vm_name": "$vm_output",
            "net_device": "virtio-net",
            "disk_interface": "virtio",

            "boot_command": "<enter>"
        }
    ]
EOF
            act "target: $target"
            ;;

        *)
            error "packer target unsupported: $target"
            return 1
            ;;
    esac


    [[ "$target" =~ "-bare$" ]] || {
        cat <<EOF >> $ztmpfile
,
    "provisioners":
    [
        {
            "type": "file",
            "source": "$R/packer/devuan-base",
            "destination": "/tmp/devuan-base"
        },
        {
            "type": "shell",
            "inline": "sh /tmp/devuan-base"
        }
    ]
EOF
    }


    # json EOF
    print "}" >> $ztmpfile

    [[ -d $R/packer/$target ]] && rm -rf $R/packer/$target

    packer build $ztmpfile && {

        # shrink to fit
        # TODO: investigate if this can be done in packer's post-proc
        [[ "$target" =~ "qemu" ]] && {
            notice "Shrinking QEMU cow to fit"
            qemu-img convert -c -O qcow2 \
                $R/packer/$target/$vm_output.qcow2 \
                $R/packer/$target/devuan-$suite-$chroot_arch.qcow2 \
                && rm -f $R/packer/$target/$vm_output.qcow2

        }

    }
}
