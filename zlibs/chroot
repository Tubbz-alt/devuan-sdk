#!/usr/bin/env zsh

# Devuan SDK - chroot management

# Copyright (C) 2015 Dyne.org Foundation
#
# Devuan SDK is designed, written and maintained by Denis Roio <jaromil@dyne.org>
#
# This source code is free software; you can redistribute it and/or
# modify it under the terms of the GNU Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This source code is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  Please refer
# to the GNU Public License for more details.
#
# You should have received a copy of the GNU Public License along with
# this source code; if not, write to: Free Software Foundation, Inc.,
# 675 Mass Ave, Cambridge, MA 02139, USA.

# default shell for the chroot
chroot_shell=/bin/dash

auto-chroot chroot-auto() {
    arch $1
    chroot-config
    chroot-create
    serve-local-repo on
}

chroot arch() {
    fn arch

    case $1 in
        i386|amd64) chroot_arch=$1 ;;
        *)
            warn "Chroot architecture not supported $1"
            warn "Only architectures supported: i386 or amd64"
            act -n "Existing chroots: "
            schroot -l 2>/dev/null | awk -F: '
/devuan/ {
  gsub(/devuan-/,"",$2)
  printf $2 " "
}'
            print >&2
            return 1
            ;;
    esac

    notice "Chroot selected: $chroot_arch"
    if [[ -r $sdk_path/chroot/$chroot_arch/etc/passwd ]]; then
        act "ready for use (build or run chroot-enter)"
    else
        act "not existing yet (run chroot-create)"
    fi
}

chroot-config() {
    fn chroot-config
    req=(chroot_arch)
    reqck || return $?

    [[ -r /etc/schroot/chroot.d/devuan-$chroot_arch ]] && {
        warn "Chroot configuration already existing: /etc/schroot/chroot.d/devuan-$chroot_arch"
        warn "Delete it and eventually erase chroot/$chroot_arch to rewrite"
        return 1
    }

    sudo mkdir -p $sdk_path/chroot/$chroot_arch

    tmp=`mktemp`
    chmod a+r $tmp
    cat <<EOF >> $tmp
[devuan-$chroot_arch]
type=directory
directory=$sdk_path/chroot/$chroot_arch
description=Devuan SDK $chroot_arch
users=$USER
root-users=$USER
aliases=${release}-${chroot_arch}
EOF

    sudo \
        cp $tmp /etc/schroot/chroot.d/devuan-$chroot_arch
    res=$?

    rm $tmp

    return $res
}

chroot-create() {
    fn chroot-create
    req=(chroot_arch)
    reqck || return $?

    [[ -r $sdk_path/chroot/$chroot_arch/etc/passwd ]] && {
        warn "Chroot already existing: $sdk_path/chroot/$chroot_arch"
        return 0
    }

    notice "Build and install Devuan debootstrap on host"
    .build-bootstrap debootstrap
    sudo dpkg -i $sdk_path/bootstrap/${src_name}_${src_ver}_all.deb

    notice "First stage debootstrap"

    sudo \
        debootstrap --components=$chroot_comp \
        --variant=$chroot_variant \
        --verbose \
        --foreign --arch $chroot_arch \
        --include=$chroot_include \
        --exclude=$chroot_exclude \
        --no-check-gpg \
        $release $sdk_path/chroot/$chroot_arch $mirror

    notice "Second stage debootstrap"

    schroot -c devuan-$chroot_arch -u root \
        -d /debootstrap -- ./debootstrap --second-stage

    notice "Build and install Devuan baseconf in chroot"
    .build-bootstrap devuan-baseconf
    sudo \
        cp $sdk_path/bootstrap/${src_name}_${src_ver}_all.deb \
        $sdk_path/chroot/$chroot_arch/root
    chdo \
        dpkg -i /root/${src_name}_${src_ver}_all.deb

    notice "Build and install Devuan keyring in chroot"
    .build-bootstrap devuan-keyring
    sudo \
        cp $sdk_path/bootstrap/${src_name}_${src_ver}_all.deb \
        $sdk_path/chroot/$chroot_arch/root
    chdo \
        dpkg -i /root/${src_name}_${src_ver}_all.deb

    notice "Updating package lists in chroot"
    chdo \
        apt-get update

    notice "Installing build tools in chroot"
    chdo \
        apt-get install -y zsh vim-nox \
        xorriso cpio xz-utils \
        dpkg-dev gcc g++ autoconf automake libtool

    notice "Chroot succesfully created: $chroot_arch"
}

chdo() {
    fn chdo
    req=(chroot_arch)
    freq=(chroot/$chroot_arch/etc/passwd)
    reqck || return $?

    schroot -c devuan-$chroot_arch -s $chroot_shell \
        -u root -d /root -- $@
}

chroot-enter() {
    fn chroot-enter
    req=(chroot_arch)
    freq=(chroot/$chroot_arch/etc)
    reqck || return $?

    schroot -c devuan-$chroot_arch -u root -d /root -s /bin/bash

}


serve-local-repo() {
    fn serve-local-repo
    req=(chroot_arch)
    freq=(chroot/$chroot_arch/etc/apt/sources.list)
    reqck || return $?

    tmp=`mktemp`
    root=$sdk_path/chroot/$chroot_arch

    sudo apt-get install -y mini-httpd

    case "$1" in
        on|yes)

            # update local repository
            pushd $sdk_path/builds
            rm -f Packages.xz
            dpkg-scanpackages . | awk '
/Filename:/ { gsub(/\.\//, "", $2); print $0; next }
{ print $0 }' | xz -9 > Packages.xz
            popd

            TRAPZERR() { }
            grep "localhost:12345" \
                $root/etc/apt/sources.list \
                > /dev/null
            # if not already present, add to top
            [[ $? = 0 ]] || {
                cat <<EOF >> $tmp
deb http://localhost:12345/ /
EOF
                cat $root/etc/apt/sources.list >> $tmp
                sudo mv $tmp $root/etc/apt/sources.list
                chdo apt-get update
            }
            TRAPZERR() { zerr }

            mini-httpd -u $USER -p 12345 -d $sdk_path/builds

            notice "Local builds available in chroot/$chroot_arch"

            ;;
        off|no)
            cat $root/etc/apt/sources.list \
                | grep -v "localhost:12345" >> $tmp
            sudo mv $tmp $root/etc/apt/sources.list

            chdo apt-get update

            killall mini-httpd

            notice "Local builds no more available in chroot/$chroot_arch"

            ;;
        refresh|reset|reload)

            # update local repository
            pushd $sdk_path/builds
            rm -f Packages.xz
            dpkg-scanpackages . | awk '
/Filename:/ { gsub(/\.\//, "", $2); print $0; next }
{ print $0 }' | xz -9 > Packages.xz
            popd

            chdo apt-get update
            ;;
        *)
            warn "usage: serve-local-repo [ on | off | reload ]"
            ;;
    esac
    rm -f $tmp


}
