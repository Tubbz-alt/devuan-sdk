#!/usr/bin/env zsh

# debugging and require control
fn() {
    cur_fun=$1
    func "${cur_fun}()"
    req=()
    freq=()
}

ckreq reqck() {
    err=0
    for v in $req; do
        [[ "${(P)v}" = "" ]] && {
            warn "$v :: required setting is blank"
            err=1
        }
    done

    [[ $err = 1 ]] && return $err

    for f in $freq; do
        # exists and has size greater than zero
        [[ -s $sdk_path/$f ]] || {
            warn "$f :: required file is empty"
            err=1
        }
    done
    return $err
}
        
html_strip() { sed 's/<[^>]\+>//g' }

tarcmd() {
    if [[ "$1" -regex-match ".*\.tar.bz2" ]]; then
        print -n j
    elif [[ "$1" -regex-match ".*\.tar.gz" ]]; then
        print -n z
    elif [[ "$1" -regex-match ".*\.tar.xz" ]]; then
        print -n J
    else
        print "Unknown tar archive: $1"
        return 1
    fi
    return 0
}

trim() {
    sed -e 's/^[[:space:]]*//g ; s/[[:space:]]*\$//g'
}

# zmodload zsh/mapfile
printfile() {
    print ${mapfile[$1]}
}

# extract all emails found in a text from stdin
# outputs them one per line
extract_emails() {
awk '{ for (i=1;i<=NF;i++)
     if ( $i ~ /[[:alnum:]]@[[:alnum:]]/ ) {
       gsub(/<|>|,/ , "" , $i); print $i } }'
}

# zmodload zsh/regex
isemail() {
    [[ "$1" -regex-match "\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,6}\b" ]] && return 0
    
    return 1
}
